syntax = "proto3";

package com.swisschain.grpc.messages.outgoing;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/wrappers.proto";

option java_package = "com.swisschain.matching.engine.messages.outgoing";
option java_outer_classname = "OutgoingMessages";

service GrpOutgoingEventsService {
    rpc publishEvents(MessageWrapper) returns (PublishRequestResult){};
}

message MessageWrapper {
    int32 messageType = 1;
    google.protobuf.Any message = 2;
}

message PublishRequestResult {
    bool published = 1;
    google.protobuf.StringValue reason = 2;
}

enum MessageType {
    UNKNOWN_MESSAGE_TYPE = 0;
    CASH_IN = 1;
    CASH_OUT = 2;
    CASH_TRANSFER = 3;
    ORDER = 4;
    RESERVED_BALANCE_UPDATE = 5;
    ORDER_BOOK_SNAPSHOT = 6;
}

message Header {
    int32 messageType = 1;

    int64 sequenceNumber = 2;
    string messageId = 3;
    string requestId = 4;
    string version = 5;
    google.protobuf.Timestamp timestamp = 6;
    string eventType = 7;
}

message BalanceUpdate {
    string brokerId = 1;
    uint64 accountId = 2;
    uint64 walletId = 3;
    string assetId = 4;
    string oldBalance = 5;
    string newBalance = 6;
    string oldReserved = 7;
    string newReserved = 8;
}

message Fee {
    FeeInstruction instruction = 1;
    FeeTransfer transfer = 2;
}

message FeeInstruction {
    enum FeeType {
        NO_FEE = 0;
        WALLET_FEE = 1;
        EXTERNAL_FEE = 2;
    }
    int32 type = 1;

    string size = 2;

    enum FeeSizeType {
        UNKNOWN_FEE_SIZE_TYPE = 0;
        PERCENTAGE = 1;
        ABSOLUTE = 2;
    }
    int32 sizeType = 3;

    string makerSize = 4;
    int32 makerSizeType = 5;
    uint64 sourceAccountId = 6;
    uint64 sourceWalletId = 7;
    uint64 targetAccountId = 8;
    uint64 targetWalletId = 9;
    repeated string assetsIds = 10;
    string makerFeeModificator = 11;
    int32 index = 12;
}

message FeeTransfer {
    string volume = 1;
    uint64 sourceAccountId = 2;
    uint64 sourceWalletId = 3;
    uint64 targetAccountId = 4;
    uint64 targetWalletId = 5;
    string assetId = 6;
    string feeCoef = 7;
    int32 index = 8;
}

message CashInEvent {
    message CashIn {
        string brokerId = 1;
        uint64 accountId = 2;
        uint64 walletId = 3;
        string assetId = 4;
        string volume = 5;
        repeated Fee fees = 6;
        string description = 7;
    }
    Header header = 1;
    repeated BalanceUpdate balanceUpdates = 2;
    CashIn cashIn = 3;
}

message CashOutEvent {
    message CashOut {
        string brokerId = 1;
        uint64 accountId = 2;
        uint64 walletId = 3;
        string assetId = 4;
        string volume = 5;
        repeated Fee fees = 6;
        string description = 7;
    }
    Header header = 1;
    repeated BalanceUpdate balanceUpdates = 2;
    CashOut cashOut = 3;
}

message CashTransferEvent {
    message CashTransfer {
        string brokerId = 1;
        uint64 accountId = 2;
        uint64 fromWalletId = 3;
        uint64 toWalletId = 4;
        string volume = 5;
        string overdraftLimit = 6;
        string assetId = 7;
        repeated Fee fees = 8;
        string description = 9;
    }
    Header header = 1;
    repeated BalanceUpdate balanceUpdates = 2;
    CashTransfer cashTransfer = 3;
}

message ExecutionEvent {
    message Order {
        message Trade {
            string tradeId = 1;
            string baseAssetId = 2;
            string baseVolume = 3;
            string price = 4;
            google.protobuf.Timestamp timestamp = 5;
            string oppositeOrderId = 6;
            string oppositeExternalOrderId = 7;
            uint64 oppositeWalletId = 8;
            string quotingAssetId = 9;
            string quotingVolume = 10;
            int32 index = 11;
            string absoluteSpread = 12;
            string relativeSpread = 13;

            enum TradeRole {
                UNKNOWN_ROLE = 0;
                MAKER = 1;
                TAKER = 2;
            }
            int32 role = 14;

            repeated FeeTransfer fees = 15;
            TradeStatus status = 16;
        }

        enum OrderType {
            UNKNOWN_ORDER_TYPE = 0;
            MARKET = 1;
            LIMIT = 2;
            STOP_LIMIT = 3;
        }
        int32 orderType = 1;

        string id = 2;
        string externalId = 3;
        string assetPairId = 4;
        uint64 walletId = 5;

        enum OrderSide {
            UNKNOWN_ORDER_SIDE = 0;
            BUY = 1;
            SELL = 2;
        }
        int32 side = 6;

        string volume = 7;
        string remainingVolume = 8;
        string price = 9;

        enum OrderStatus {
            UNKNOWN_STATUS = 0;
            PLACED = 1;
            PARTIALLY_MATCHED = 2;
            MATCHED = 3;
            PENDING = 4;
            CANCELLED = 5;
            REPLACED = 6;
            REJECTED = 7;
            EXECUTED = 8;
        }
        int32 status = 10;

        string rejectReason = 11;
        google.protobuf.Timestamp statusDate = 12;
        google.protobuf.Timestamp createdAt = 13;
        google.protobuf.Timestamp registered = 14;
        google.protobuf.Timestamp lastMatchTime = 15;
        string lowerLimitPrice = 16;
        string lowerPrice = 17;
        string upperLimitPrice = 18;
        string upperPrice = 19;
        bool straight = 20;
        repeated FeeInstruction fees = 21;
        repeated Trade trades = 22;

        enum OrderTimeInForce {
            UNKNOWN_ORDER_TIME_IN_FORCE = 0;
            GTC = 1;
            GTD = 2;
            IOC = 3;
            FOK = 4;
        }
        int32 timeInForce = 23;
        google.protobuf.Timestamp expiryTime = 24;
        string parentExternalId = 25;
        string childExternalId = 26;
        string brokerId = 27;
        uint64 accountId = 28;
    }
    Header header = 1;
    repeated BalanceUpdate balanceUpdates = 2;
    repeated Order orders = 3;
}

enum TradeStatus {
    UNKNOWN_STATUS = 0;
    PENDING = 1;
    CONFIRMED = 2;
    REJECTED = 3;
}

message TradeResponse {
    string traderId = 1;
    TradeStatus status = 2;
    string statusReason = 3;
    google.protobuf.Timestamp timestamp = 4;
}

message ReservedBalanceUpdateEvent {
    message ReservedBalanceUpdate {
        string brokerId = 1;
        uint64 accountId = 2;
        uint64 walletId = 3;
        string assetId = 4;
        string volume = 5;
        string description = 6;
    }
    Header header = 1;
    repeated BalanceUpdate balanceUpdates = 2;
    ReservedBalanceUpdate reservedBalanceUpdate = 3;
}

message OrderBookSnapshotEvent {
    Header header = 1;
    OrderBookSnapshot orderBook = 2;
}

message OrderBookSnapshotRequest {
    string brokerId = 1;
}

message OrderBookSnapshot {
    string asset = 1;
    bool isBuy = 2;
    google.protobuf.Timestamp timestamp = 3;

    message OrderBookLevel {
        string price = 1;
        string volume = 2;
        uint64 walletId = 3;
        string orderId = 4;
    }

    repeated OrderBookLevel levels = 4;
    string brokerId = 5;
}